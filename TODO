This is a basic developer notepad for keeping notes on development
activities and ideas.  Until the first 1.0 release, this is not a
traditional formalized TODO list of pending development actions
intended for the general public.  Please use the //TODO notation since
IDEs like Eclipse can auto generate a list of all //TODO tags in the entire
codebase.

//TODO Check for const-ness from top to bottom

//TODO Look at /src/GE/exception and see if anything is actually using those files.  If not, remove them.

Probably lots more...

//TODO Implement GSMutex/GSMutexLocker
//TODO Fix segfaults in tests


//TODO Get documentation into docbook and set up to build
//TODO Write man pages for geomclient and geomserv.  

//TODO should geomclient be using libgsclient?


Functionality to implement:

//TODO Basic ability to pack up a requested .g object and its components (i.e. if 
requesting an assembly get a bu_external containing the assembly, any 
sub-assemblies, and any regions - the full tree) - see g_transfer

//TODO pack a bu_external into the appropriate geometry service wrapper and send 
it down the connection to a client.

//TODO Client needs to recognize it is getting geometry and know what to do with 
it - at a minimum, stash the contents into a client-side bu_external, 
complete the read stages to get some valid, useful in memory structure 
(rt_db_internal?) and print out the objects received.


//TODO Once we can do the above, convert svnTest logic into something a tad more useful - 
for a first cut, maybe have an "init" routine that eats a .g and creates a server
backend arrangement.  Ideally this shouldn't have to write out everything to disk...
current svnTest setup assumes that, but does the libsvn api really require it? hmm...

//TODO Also need to have a way for the geometry service to take an object name, and generate
the list of contents down to the region level that it will need to read.  Shoudl be
a fairly straightforward tree walk, but that will need to be set up as well.  Perhaps
the tree walk will call the bu_external packing routine with no need for intermediate
stages, if that's reliable - may have to be careful about duplicate names when concating
multiple regions, so straight bu_external concating may not be enough.
