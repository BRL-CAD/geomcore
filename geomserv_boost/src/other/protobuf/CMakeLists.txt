# Minimum required version of CMake
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(COMMAND CMAKE_POLICY)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND CMAKE_POLICY)

# Set CMake project name
PROJECT(PROTOBUF)

# Set project information
SET(PACKAGE protobuf)
SET(VERSION 2.4.1)
SET(PACKAGE_NAME ${PACKAGE})
SET(PACKAGE_BUGREPORT "protobuf@googlegroups.com")
SET(PACKAGE_STRING "${PACKAGE} ${VERSION}")
SET(PACKAGE_TARNAME ${PACKAGE})
SET(PACKAGE_VERSION ${VERSION})

INCLUDE_DIRECTORIES(
	${CMAKE_CURRENT_BINARY_DIR}
	${CMAKE_CURRENT_SOURCE_DIR}
	)

SET(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/CMake)
include(${CMAKE_MODULE_PATH}/CheckHashMap.cmake)
FIND_PACKAGE(Threads)
IF(CMAKE_HAVE_PTHREAD_CREATE)
	SET(HAVE_PTHREAD 1)
ENDIF(CMAKE_HAVE_PTHREAD_CREATE)
FIND_PACKAGE(ZLIB)
IF(ZLIB_FOUND)
	SET(HAVE_ZLIB 1)
ENDIF(ZLIB_FOUND)

SET(STDC_HEADERS 1)
INCLUDE(CheckIncludeFile)
CHECK_INCLUDE_FILE(dlfcn.h HAVE_DLFCN_H)
CHECK_INCLUDE_FILE(fcntl.h HAVE_FCNTL_H)
CHECK_INCLUDE_FILE(inttypes.h HAVE_INTTYPES_H)
CHECK_INCLUDE_FILE(limits.h HAVE_LIMITS_H)
CHECK_INCLUDE_FILE(memory.h HAVE_MEMORY_H)
CHECK_INCLUDE_FILE(stdint.h HAVE_STDINT_H)
CHECK_INCLUDE_FILE(stdlib.h HAVE_STDLIB_H)
CHECK_INCLUDE_FILE(strings.h HAVE_STRINGS_H)
CHECK_INCLUDE_FILE(string.h HAVE_STRING_H)
CHECK_INCLUDE_FILE(sys/stat.h HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILE(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILE(unistd.h HAVE_UNISTD_H)

INCLUDE(CheckFunctionExists)
CHECK_FUNCTION_EXISTS(ftruncate HAVE_FTRUNCATE)
CHECK_FUNCTION_EXISTS(memset HAVE_MEMSET)
CHECK_FUNCTION_EXISTS(mkdir HAVE_MKDIR)
CHECK_FUNCTION_EXISTS(strchr HAVE_STRCHR)
CHECK_FUNCTION_EXISTS(strerror HAVE_STRERROR)
CHECK_FUNCTION_EXISTS(strtol HAVE_STRTOL)

configure_file(config_cmake.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)
add_definitions(-DHAVE_CONFIG_H)

ADD_SUBDIRECTORY(src)
